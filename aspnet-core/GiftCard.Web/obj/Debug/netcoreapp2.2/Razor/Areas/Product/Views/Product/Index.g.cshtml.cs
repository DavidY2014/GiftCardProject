#pragma checksum "D:\SVN\GiftCardProject\source\aspnet-core\GiftCard.Web\Areas\Product\Views\Product\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f35d4c0a1e28229f7f3b6954271e708ff90566a6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Product_Views_Product_Index), @"mvc.1.0.view", @"/Areas/Product/Views/Product/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Product/Views/Product/Index.cshtml", typeof(AspNetCore.Areas_Product_Views_Product_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f35d4c0a1e28229f7f3b6954271e708ff90566a6", @"/Areas/Product/Views/Product/Index.cshtml")]
    public class Areas_Product_Views_Product_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\SVN\GiftCardProject\source\aspnet-core\GiftCard.Web\Areas\Product\Views\Product\Index.cshtml"
  
    Layout = "~/Views/Shared/_MasterDataList.cshtml";

#line default
#line hidden
            BeginContext(62, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("ToolMenuBar", async() => {
                BeginContext(85, 126, true);
                WriteLiteral("\r\n    <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:\'icon-add\',plain:true\" id=\"Create\">新增</a>\r\n");
                EndContext();
            }
            );
            BeginContext(214, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("SearchCondition", async() => {
                BeginContext(241, 1002, true);
                WriteLiteral(@"
    <table class=""grid"">
        <tbody>
            <tr>
                <td width=""10%"">
                    <label>合同编号&nbsp;</label>
                </td>
                <td align=""left"">
                    <input type=""text"" name=""RepairContractId"" id=""RepairContractId"" data-ctlname=""RepairContractId"" class=""easyui-textbox"" />
                </td>
                <td width=""10%"">
                    <label>客户编码&nbsp;</label>
                </td>
                <td align=""left"">
                    <input type=""text"" name=""CustomerId"" id=""CustomerId"" data-ctlname=""CustomerId"" class=""easyui-textbox"" />
                </td>
                <td width=""10%"">
                    <label>客户名称&nbsp;</label>
                </td>
                <td align=""left"">
                    <input type=""text"" name=""CustomerName"" id=""CustomerName"" data-ctlname=""CustomerName"" class=""easyui-textbox"" />
                </td>
            </tr>
        </tbody>
    </table>
");
                EndContext();
            }
            );
            BeginContext(1246, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("GridColumn", async() => {
                BeginContext(1268, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(1273, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Script", async() => {
                BeginContext(1291, 424, true);
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(function () {
            //初始化网格
            $('#GridList').datagrid({
                url: '/Product/Product/QueryList',
                columns: [[
                    { field: 'name', title: 'Name', width: 100 },
                    { field: 'code', title: 'Code', width: 100 },
                ]]
            });  








        });

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
